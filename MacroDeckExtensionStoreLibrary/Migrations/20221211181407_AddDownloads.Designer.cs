// <auto-generated />
using System;
using MacroDeckExtensionStoreLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MacroDeckExtensionStoreLibrary.Migrations
{
    [DbContext(typeof(ExtensionStoreDbContext))]
    [Migration("20221211181407_AddDownloads")]
    partial class AddDownloads
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MacroDeckExtensionStoreLibrary.Models.Extension", b =>
                {
                    b.Property<int>("ExtensionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DSupportUserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Downloads")
                        .HasColumnType("bigint");

                    b.Property<int>("ExtensionType")
                        .HasColumnType("int");

                    b.Property<string>("GitHubRepository")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PackageId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ExtensionId");

                    b.ToTable("Extensions");
                });

            modelBuilder.Entity("MacroDeckExtensionStoreLibrary.Models.ExtensionFile", b =>
                {
                    b.Property<int>("ExtensionFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DescriptionHtml")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ExtensionId")
                        .HasColumnType("int");

                    b.Property<string>("IconFileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LicenseName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LicenseUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MD5Hash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MinAPIVersion")
                        .HasColumnType("int");

                    b.Property<string>("PackageFileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UploadDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ExtensionFileId");

                    b.HasIndex("ExtensionId");

                    b.ToTable("ExtensionFiles");
                });

            modelBuilder.Entity("MacroDeckExtensionStoreLibrary.Models.ExtensionFile", b =>
                {
                    b.HasOne("MacroDeckExtensionStoreLibrary.Models.Extension", null)
                        .WithMany("ExtensionFiles")
                        .HasForeignKey("ExtensionId");
                });

            modelBuilder.Entity("MacroDeckExtensionStoreLibrary.Models.Extension", b =>
                {
                    b.Navigation("ExtensionFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
