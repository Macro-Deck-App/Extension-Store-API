name: Deploy Production

on:
  release:
    types: [published]

jobs:
  tests:
    uses: ./.github/workflows/tests.yml
    name: Build and test
  deploy:
    name: Build and deploy Docker image
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: kzrnm/get-net-sdk-project-versions-action@v1
        id: get-version
        with:
          proj-path: MacroDeckExtensionStoreAPI/MacroDeckExtensionStoreAPI.csproj
      - name: Build the Docker image
        run: docker build . --file MacroDeckExtensionStoreAPI/Dockerfile --tag suchbyte/macro-deck-extensionstoreapi:${{steps.get-version.outputs.version}}
      - name: Log into registry
        uses: docker/login-action@553b6f090f15b58451081ce157ff1929a266131d
        with:
          registry: docker.io
          username: suchbyte
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push the Docker image
        run: docker push suchbyte/macro-deck-extensionstoreapi:${{steps.get-version.outputs.version}}
      - name: Updating the image on the server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.DOCKER_HOST }}
          username: ${{ secrets.GITHUBWORKFLOWS_USER }}
          password: ${{ secrets.GITHUBWORKFLOWS_USER_PASSWORD }}
          port: ${{ secrets.DOCKER_HOST_PORT }}
          script: |
            cd "scripts/ExtensionStoreAPI/"
            ./update_production.sh ${{steps.get-version.outputs.version}}
      - uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://bot.api.macro-deck.app/webhook/extensionstoreapi-workflow'
          method: 'POST'
          bearerToken:  ${{ secrets.WEBHOOK_KEY }}
          customHeaders: '{"Content-Type": "application/json" }'
          data: '{"toEveryone":false,"embed":{"color":{"r":0,"g":1,"b":0},"description":"https://extensionstore.api.macro-deck.app is now on dev_${{ github.sha }}.","fields":[{"name":"Branch","value":"Develop","inline":false},{"name":"SHA","value":"${{ github.sha }}","inline":false}]}}'
    
